package crypto

import (
	C25519 "github.com/incognitochain/incognito-chain-privacy/crypto/curve25519"
	"math/big"
)

const (
	Ed25519KeySize = 32
	AESKeySize     = 32
	HashSize          = 32 // bytes
	MaxHashStringSize = HashSize * 2

	CStringBulletProof = "bulletproof"
	CStringBasePoint   = "basepoint"
	//CStringBurningAddress = "burningaddress"
)

var (
	GKey = C25519.Key{0x58, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66}
	// H = HashToPointFromIndex(0, CStringBasePoint)
	HKey = C25519.Key{0xd7, 0x8d, 0xa0, 0xb6, 0xc, 0xdf, 0x62, 0x72, 0x50, 0x29, 0x11, 0xa6, 0xc7, 0x2f, 0x8b, 0xc0, 0x45, 0x97, 0x1e, 0x9a, 0x44, 0xca, 0x24, 0xc, 0x32, 0x49, 0x34, 0x5b, 0xe8, 0x38, 0xe2, 0xeb}

	G, _ = new(Point).SetKey(&GKey)
	H, _ = new(Point).SetKey(&HKey)
)

var LInt = new(big.Int).SetBytes([]byte{0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0xde, 0xf9, 0xde, 0xa2, 0xf7, 0x9c, 0xd6, 0x58, 0x12, 0x63, 0x1a, 0x5c, 0xf5, 0xd3, 0xed})
